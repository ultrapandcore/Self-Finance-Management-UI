<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="An error has occurred. This application may no longer respond until reloaded." xml:space="preserve">
    <value>An error has occurred. This application may no longer respond until reloaded.</value>
  </data>
  <data name="An error occurred while processing your request." xml:space="preserve">
    <value>An error occurred while processing your request.</value>
  </data>
  <data name="An unhandled exception has occurred. See browser dev tools for details." xml:space="preserve">
    <value>An unhandled exception has occurred. See browser dev tools for details.</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Categories" xml:space="preserve">
    <value>Categories</value>
  </data>
  <data name="CategoryNameExists" xml:space="preserve">
    <value>Category name already exists.</value>
  </data>
  <data name="CategoryNameLength" xml:space="preserve">
    <value>The category name must be between 2 and 50 characters.</value>
  </data>
  <data name="CategoryNameRequired" xml:space="preserve">
    <value>Category name is required.</value>
  </data>
  <data name="Change" xml:space="preserve">
    <value>Change</value>
  </data>
  <data name="Create" xml:space="preserve">
    <value>Create</value>
  </data>
  <data name="Date cannot be in the future." xml:space="preserve">
    <value>Date cannot be in the future.</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="Determining session state, please wait..." xml:space="preserve">
    <value>Determining session state, please wait...</value>
  </data>
  <data name="Development Mode" xml:space="preserve">
    <value>Development Mode</value>
  </data>
  <data name="End Date (optional)" xml:space="preserve">
    <value>End Date (optional)</value>
  </data>
  <data name="Enter amount" xml:space="preserve">
    <value>Enter amount</value>
  </data>
  <data name="Enter category name" xml:space="preserve">
    <value>Enter category name</value>
  </data>
  <data name="Enter name" xml:space="preserve">
    <value>Enter name</value>
  </data>
  <data name="Enter new category name" xml:space="preserve">
    <value>Enter new category name</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="Expense" xml:space="preserve">
    <value>Expense</value>
  </data>
  <data name="Expenses" xml:space="preserve">
    <value>Expenses</value>
  </data>
  <data name="For local debugging, enable the Development environment by setting the ASPNETCORE_ENVIRONMENT environment variable to Development and restarting the app." xml:space="preserve">
    <value>For local debugging, enable the Development environment by setting the ASPNETCORE_ENVIRONMENT environment variable to Development and restarting the app.</value>
  </data>
  <data name="Home" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="Income" xml:space="preserve">
    <value>Income</value>
  </data>
  <data name="It can result in displaying sensitive information from exceptions to end users." xml:space="preserve">
    <value>It can result in displaying sensitive information from exceptions to end users.</value>
  </data>
  <data name="Loading data, please wait..." xml:space="preserve">
    <value>Loading data, please wait...</value>
  </data>
  <data name="Log in" xml:space="preserve">
    <value>Log in</value>
  </data>
  <data name="Log out" xml:space="preserve">
    <value>Log out</value>
  </data>
  <data name="New Category" xml:space="preserve">
    <value>New Category</value>
  </data>
  <data name="New Operation" xml:space="preserve">
    <value>New Operation</value>
  </data>
  <data name="No operations found for this category." xml:space="preserve">
    <value>No operations found for this category.</value>
  </data>
  <data name="No operations found for this date." xml:space="preserve">
    <value>No operations found for this date.</value>
  </data>
  <data name="Not found" xml:space="preserve">
    <value>Not found</value>
  </data>
  <data name="OperationAmountOutOfRange" xml:space="preserve">
    <value>Amount must be greater than 0</value>
  </data>
  <data name="OperationCategoryRequired" xml:space="preserve">
    <value>Category can't be empty.</value>
  </data>
  <data name="OperationNameLength" xml:space="preserve">
    <value>The field Name must be a string with a minimum length of 3 and a maximum length of 50.</value>
  </data>
  <data name="OperationNameRequired" xml:space="preserve">
    <value>The Name field is required.</value>
  </data>
  <data name="Operations" xml:space="preserve">
    <value>Operations</value>
  </data>
  <data name="Reload" xml:space="preserve">
    <value>Reload</value>
  </data>
  <data name="Request ID" xml:space="preserve">
    <value>Request ID</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="Select" xml:space="preserve">
    <value>Select</value>
  </data>
  <data name="Select Category" xml:space="preserve">
    <value>Select Category</value>
  </data>
  <data name="Site Language" xml:space="preserve">
    <value>Site Language</value>
  </data>
  <data name="Sorry" xml:space="preserve">
    <value>Sorry</value>
  </data>
  <data name="Sorry, there's nothing at this address." xml:space="preserve">
    <value>Sorry, there's nothing at this address.</value>
  </data>
  <data name="Start Date" xml:space="preserve">
    <value>Start Date</value>
  </data>
  <data name="Submit" xml:space="preserve">
    <value>Submit</value>
  </data>
  <data name="Swapping to the Development environment displays detailed information about the error that occurred." xml:space="preserve">
    <value>Swapping to the Development environment displays detailed information about the error that occurred.</value>
  </data>
  <data name="The Development environment shouldn't be enabled for deployed applications." xml:space="preserve">
    <value>The Development environment shouldn't be enabled for deployed applications.</value>
  </data>
  <data name="Update" xml:space="preserve">
    <value>Update</value>
  </data>
  <data name="Welcome" xml:space="preserve">
    <value>Welcome</value>
  </data>
  <data name="You're not authorized to reach this page. You need to log in." xml:space="preserve">
    <value>You're not authorized to reach this page. You need to log in.</value>
  </data>
  <data name="{0} cannot be less than {1}" xml:space="preserve">
    <value>{0} cannot be less than {1}</value>
  </data>
</root>